{"version":3,"file":"static/js/186.997ca028.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAKP,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAgCC,GAAhC,wHAGoBP,EAASQ,IAH7B,uBAGwC,CACzCL,OAAQ,CAAEI,KAAAA,KAJT,uBAGKE,EAHL,EAGKA,KAHL,kBAMIA,GANJ,2HAYA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA8BC,GAA9B,kFACCC,EADD,iBACmBD,GADnB,kBAGoBX,EAASQ,IAAII,GAHjC,uBAGKH,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAWA,SAAeI,EAAtB,kC,aAAO,O,oBAAA,WAA4BF,GAA5B,kFACCC,EADD,iBACmBD,EADnB,8BAGoBX,EAASQ,IAAII,GAHjC,uBAGKH,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,kFACCC,EADD,iBACmBD,EADnB,8BAGoBX,EAASQ,IAAII,GAHjC,uBAGKH,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kFACCJ,EADD,8BACgCI,GADhC,kBAGoBhB,EAASQ,IAAII,GAHjC,uBAGKH,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2H,yGCRP,UA3CgB,WACd,OAAwBQ,EAAAA,EAAAA,UAAS,MAAjC,eAAOR,EAAP,KAAaS,EAAb,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,sGAEZJ,GAAW,GAFC,UAGcN,EAAAA,EAAAA,IAAgBO,GAH9B,gBAGJI,EAHI,EAGJA,QACRP,EAAQO,GACRL,GAAW,GALC,kDAOZM,QAAQC,IAAR,MAPY,yBASZP,GAAW,GATC,6EAAH,qDAYbI,GACD,GAAE,CAACH,KAGF,8BACGF,EACC,aACEV,GAAQA,EAAKmB,OAAS,GACxB,0BACE,eAAIC,UAAU,UAAd,SACGpB,EAAKqB,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASrB,EAApB,EAAoBA,GAApB,OACR,2BACE,cAAGkB,UAAU,iBAAb,SAA+BE,IAC9BC,GAAWA,IAFLrB,EADD,SASd,0CAIP,C","sources":["api/api.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '50eb30280678e2b5b5676ecd070356bb',\n    language: 'en-US',\n  },\n});\n\n// // запрос трендових фільмів дня для рендера на головну сторінку\nexport async function getTrendingMovie(page) {\n  const query = `/trending/movie/week`;\n  try {\n    const { data } = await instance.get(query, {\n      params: { page },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n// // запрос деталей фільму\nexport async function getMovieDetail(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\n// // запрос касту фільма\nexport async function getMovieCast(id) {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\n// // запрос на відгуки для фільму\nexport async function getMovieReviews(id) {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function searchMovie(queryString) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n","import { useState, useEffect } from 'react';\nimport { getMovieReviews } from 'api/api';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const { results } = await getMovieReviews(movieId);\n        setData(results);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getData();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading ? (\n        'Loading...'\n      ) : data && data.length > 0 ? (\n        <div>\n          <ul className=\"reviews\">\n            {data.map(({ author, content, id }) => (\n              <li key={id}>\n                <p className=\"reviews-author\">{author}</p>\n                {content && content}\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <p>No data found</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["instance","axios","baseURL","params","api_key","language","getTrendingMovie","page","get","data","getMovieDetail","id","query","getMovieCast","getMovieReviews","searchMovie","queryString","useState","setData","loading","setLoading","movieId","useParams","useEffect","getData","results","console","log","length","className","map","author","content"],"sourceRoot":""}