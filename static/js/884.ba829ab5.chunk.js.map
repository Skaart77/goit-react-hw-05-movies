{"version":3,"file":"static/js/884.ba829ab5.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAKP,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAgCC,GAAhC,wHAGoBP,EAASQ,IAH7B,uBAGwC,CACzCL,OAAQ,CAAEI,KAAAA,KAJT,uBAGKE,EAHL,EAGKA,KAHL,kBAMIA,GANJ,2HAYA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA8BC,GAA9B,kFACCC,EADD,iBACmBD,GADnB,kBAGoBX,EAASQ,IAAII,GAHjC,uBAGKH,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAWA,SAAeI,EAAtB,kC,aAAO,O,oBAAA,WAA4BF,GAA5B,kFACCC,EADD,iBACmBD,EADnB,8BAGoBX,EAASQ,IAAII,GAHjC,uBAGKH,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,kFACCC,EADD,iBACmBD,EADnB,8BAGoBX,EAASQ,IAAII,GAHjC,uBAGKH,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kFACCJ,EADD,8BACgCI,GADhC,kBAGoBhB,EAASQ,IAAII,GAHjC,uBAGKH,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2H,0HCwCP,UA1FqB,WAAO,IAAD,IACzB,GAAwBQ,EAAAA,EAAAA,UAAS,MAAjC,eAAOR,EAAP,KAAaS,EAAb,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,oGAEZJ,GAAW,GAFC,UAGOV,EAAAA,EAAAA,IAAeW,GAHtB,OAGNZ,EAHM,OAIZS,EAAQT,GACRW,GAAW,GALC,gDAOZK,QAAQC,IAAR,MAPY,yBASZN,GAAW,GATC,4EAAH,qDAYbI,GACD,GAAE,CAACH,IAEJ,IAKkBM,EALFC,EAUVC,EAAI,qBADOC,EAAAA,EAAAA,MACKC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,SACrC,OACE,iCACE,SAAC,KAAD,CAAMC,UAAU,cAAcC,GAAIL,EAAlC,qBAGCV,EACC,cAEA,iCACE,iBAAKc,UAAU,iBAAf,UACGxB,EAAK0B,aACJ,gBACEF,UAAU,wBACVG,IAAK3B,EAAK4B,eACVC,IAAG,yCAAoC7B,EAAK0B,gBAG9C,gBAAKC,IAAI,mBAGX,iBAAKH,UAAU,sBAAf,WACE,0BACGxB,EAAK4B,eADR,MAhCIT,EAiC8BnB,EAAK8B,aAhCpC,IAAIC,KAAKZ,GACVa,eA8BF,QAGA,2CAAuC,GAApBhC,EAAKiC,cAAxB,QACA,qCACA,uBAAIjC,EAAKkC,YACT,mCACA,wBAlCMhB,EAkCQlB,EAAKmC,OAjCtBjB,EAAUkB,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,UAkCrC,0BACE,gBAAIf,UAAU,sBAAd,WACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAOH,MAAO,CAAEC,KAAMH,GAA/B,UACE,oBAAQI,UAAU,wBAAlB,WACE,SAAC,MAAD,CAAagB,KAAM,KADrB,eAMJ,yBACE,SAAC,KAAD,CAAMf,GAAG,UAAUH,MAAO,CAAEC,KAAMH,GAAlC,UACE,oBAAQI,UAAU,wBAAlB,WACE,SAAC,MAAD,CAAyBgB,KAAM,KADjC,6BAUZ,SAAC,KAAD,SAKT,C","sources":["api/api.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '50eb30280678e2b5b5676ecd070356bb',\n    language: 'en-US',\n  },\n});\n\n// // запрос трендових фільмів дня для рендера на головну сторінку\nexport async function getTrendingMovie(page) {\n  const query = `/trending/movie/week`;\n  try {\n    const { data } = await instance.get(query, {\n      params: { page },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n// // запрос деталей фільму\nexport async function getMovieDetail(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\n// // запрос касту фільма\nexport async function getMovieCast(id) {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\n// // запрос на відгуки для фільму\nexport async function getMovieReviews(id) {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function searchMovie(queryString) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n","import { Link, useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieDetail } from 'api/api';\nimport { HiUserGroup, HiOutlineChatBubbleLeft } from 'react-icons/hi2';\n\nconst MovieDetails = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const data = await getMovieDetail(movieId);\n        setData(data);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getData();\n  }, [movieId]);\n\n  const getYear = releaseDate => {\n    const date = new Date(releaseDate);\n    return date.getFullYear();\n  };\n\n  const getGenres = arrGenres => {\n    return arrGenres.map(genre => genre.name).join(', ');\n  };\n\n  const location = useLocation();\n  const back = location.state?.from ?? '/movie';\n  return (\n    <>\n      <Link className=\"button-back\" to={back}>\n        Go Back\n      </Link>\n      {loading ? (\n        'Loading...'\n      ) : (\n        <>\n          <div className=\"movie_details \">\n            {data.poster_path ? (\n              <img\n                className=\"movie_details--poster\"\n                alt={data.original_title}\n                src={`https://image.tmdb.org/t/p/w500${data.poster_path}`}\n              />\n            ) : (\n              <img alt=\"not available\" />\n            )}\n\n            <div className=\"movie_details--item\">\n              <h1>\n                {data.original_title} ({getYear(data.release_date)})\n              </h1>\n              <p>User Score: {~~(data.vote_average * 10)}%</p>\n              <p>Overview</p>\n              <p>{data.overview}</p>\n              <p>Genres</p>\n              <p>{getGenres(data.genres)}</p>\n              <div>\n                <ul className=\"movie_details--info\">\n                  <li>\n                    <Link to=\"cast\" state={{ from: back }}>\n                      <button className=\"movie_details--button\">\n                        <HiUserGroup size={20} />\n                        Cast\n                      </button>\n                    </Link>\n                  </li>\n                  <li>\n                    <Link to=\"reviews\" state={{ from: back }}>\n                      <button className=\"movie_details--button\">\n                        <HiOutlineChatBubbleLeft size={20} />\n                        Reviews\n                      </button>\n                    </Link>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["instance","axios","baseURL","params","api_key","language","getTrendingMovie","page","get","data","getMovieDetail","id","query","getMovieCast","getMovieReviews","searchMovie","queryString","useState","setData","loading","setLoading","movieId","useParams","useEffect","getData","console","log","arrGenres","releaseDate","back","useLocation","state","from","className","to","poster_path","alt","original_title","src","release_date","Date","getFullYear","vote_average","overview","genres","map","genre","name","join","size"],"sourceRoot":""}